%!PS-Adobe-2.0
%%Title: conv4.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Tue Apr 24 12:50:01 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (conv4.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (nivarti)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Apr 24 12:50:01 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
990 576 M
5885 0 V
stroke
LTb
990 576 M
63 0 V
5822 0 R
-63 0 V
882 576 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 1001 M
5885 0 V
stroke
LTb
990 1001 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.05) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 1425 M
5885 0 V
stroke
LTb
990 1425 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.1) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 1850 M
5885 0 V
stroke
LTb
990 1850 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.15) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 2275 M
5885 0 V
stroke
LTb
990 2275 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.2) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 2700 M
5885 0 V
stroke
LTb
990 2700 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.25) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 3124 M
5885 0 V
stroke
LTb
990 3124 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.3) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 3549 M
5885 0 V
stroke
LTb
990 3549 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.35) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 3974 M
5885 0 V
stroke
LTb
990 3974 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.4) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 4398 M
4958 0 V
819 0 R
108 0 V
stroke
LTb
990 4398 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.45) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 4823 M
5885 0 V
stroke
LTb
990 4823 M
63 0 V
5822 0 R
-63 0 V
-5930 0 R
( 0.5) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 576 M
0 4247 V
stroke
LTb
990 576 M
0 63 V
0 4184 R
0 -63 V
990 396 M
( 1) Cshow
1.000 UL
LTb
1876 576 M
0 31 V
0 4216 R
0 -31 V
2394 576 M
0 31 V
0 4216 R
0 -31 V
2762 576 M
0 31 V
0 4216 R
0 -31 V
3047 576 M
0 31 V
0 4216 R
0 -31 V
3280 576 M
0 31 V
0 4216 R
0 -31 V
3477 576 M
0 31 V
0 4216 R
0 -31 V
3647 576 M
0 31 V
0 4216 R
0 -31 V
3798 576 M
0 31 V
0 4216 R
0 -31 V
stroke
LTa
3933 576 M
0 4247 V
stroke
LTb
3933 576 M
0 63 V
0 4184 R
0 -63 V
0 -4364 R
( 10) Cshow
1.000 UL
LTb
4818 576 M
0 31 V
0 4216 R
0 -31 V
5336 576 M
0 31 V
0 4216 R
0 -31 V
5704 576 M
0 31 V
0 4216 R
0 -31 V
5989 576 M
0 31 V
0 4216 R
0 -31 V
6222 576 M
0 31 V
0 4216 R
0 -31 V
6419 576 M
0 31 V
0 4216 R
0 -31 V
6590 576 M
0 31 V
0 4216 R
0 -31 V
6740 576 M
0 31 V
0 4216 R
0 -31 V
stroke
LTa
6875 576 M
0 4247 V
stroke
LTb
6875 576 M
0 63 V
0 4184 R
0 -63 V
0 -4364 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
990 4823 N
990 576 L
5885 0 V
0 4247 V
-5885 0 V
Z stroke
LCb setrgbcolor
144 2699 M
currentpoint gsave translate -270 rotate 0 0 M
(Change in Solution) Cshow
grestore
LTb
LCb setrgbcolor
3932 126 M
(Iterations) Cshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6056 4670 M
(P) Rshow
LT0
990 4536 Box
1876 2315 Box
2394 1350 Box
2762 1222 Box
3047 1167 Box
3280 1047 Box
3477 853 Box
3647 692 Box
3798 642 Box
3933 642 Box
4054 628 Box
4165 606 Box
4268 590 Box
4362 589 Box
4451 592 Box
4533 590 Box
4611 586 Box
4684 582 Box
4753 580 Box
4818 580 Box
4881 580 Box
4940 579 Box
4997 578 Box
5051 578 Box
5103 578 Box
5154 578 Box
5202 578 Box
5248 577 Box
5293 577 Box
5336 577 Box
5378 577 Box
5419 577 Box
5458 577 Box
5496 577 Box
5533 576 Box
5569 576 Box
5604 576 Box
5639 576 Box
5672 576 Box
5704 576 Box
5736 576 Box
5766 576 Box
5796 576 Box
5826 576 Box
5855 576 Box
5883 576 Box
5910 576 Box
5937 576 Box
5963 576 Box
5989 576 Box
6015 576 Box
6039 576 Box
6064 576 Box
6088 576 Box
6111 576 Box
6134 576 Box
6157 576 Box
6179 576 Box
6201 576 Box
6222 576 Box
6243 576 Box
6264 576 Box
6285 576 Box
6305 576 Box
6324 576 Box
6344 576 Box
6363 576 Box
6382 576 Box
6401 576 Box
6419 576 Box
6437 576 Box
6455 576 Box
6473 576 Box
6490 576 Box
6507 576 Box
6524 576 Box
6541 576 Box
6557 576 Box
6574 576 Box
6590 576 Box
6606 576 Box
6621 576 Box
6637 576 Box
6652 576 Box
6667 576 Box
6682 576 Box
6697 576 Box
6712 576 Box
6411 4670 Box
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
6056 4490 M
(u) Rshow
LT1
990 2100 Circle
1876 2407 Circle
2394 2071 Circle
2762 1565 Circle
3047 1196 Circle
3280 946 Circle
3477 861 Circle
3647 806 Circle
3798 734 Circle
3933 679 Circle
4054 651 Circle
4165 639 Circle
4268 628 Circle
4362 617 Circle
4451 608 Circle
4533 603 Circle
4611 599 Circle
4684 595 Circle
4753 592 Circle
4818 589 Circle
4881 586 Circle
4940 585 Circle
4997 584 Circle
5051 582 Circle
5103 581 Circle
5154 581 Circle
5202 580 Circle
5248 579 Circle
5293 579 Circle
5336 578 Circle
5378 578 Circle
5419 578 Circle
5458 577 Circle
5496 577 Circle
5533 577 Circle
5569 577 Circle
5604 577 Circle
5639 577 Circle
5672 577 Circle
5704 577 Circle
5736 577 Circle
5766 577 Circle
5796 576 Circle
5826 576 Circle
5855 576 Circle
5883 576 Circle
5910 576 Circle
5937 576 Circle
5963 576 Circle
5989 576 Circle
6015 576 Circle
6039 576 Circle
6064 576 Circle
6088 576 Circle
6111 576 Circle
6134 576 Circle
6157 576 Circle
6179 576 Circle
6201 576 Circle
6222 576 Circle
6243 576 Circle
6264 576 Circle
6285 576 Circle
6305 576 Circle
6324 576 Circle
6344 576 Circle
6363 576 Circle
6382 576 Circle
6401 576 Circle
6419 576 Circle
6437 576 Circle
6455 576 Circle
6473 576 Circle
6490 576 Circle
6507 576 Circle
6524 576 Circle
6541 576 Circle
6557 576 Circle
6574 576 Circle
6590 576 Circle
6606 576 Circle
6621 576 Circle
6637 576 Circle
6652 576 Circle
6667 576 Circle
6682 576 Circle
6697 576 Circle
6712 576 Circle
6411 4490 Circle
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
LCb setrgbcolor
6056 4310 M
(v) Rshow
LT2
990 1912 TriU
1876 1533 TriU
2394 1382 TriU
2762 1181 TriU
3047 1002 TriU
3280 853 TriU
3477 765 TriU
3647 718 TriU
3798 681 TriU
3933 651 TriU
4054 632 TriU
4165 622 TriU
4268 615 TriU
4362 608 TriU
4451 602 TriU
4533 597 TriU
4611 594 TriU
4684 591 TriU
4753 589 TriU
4818 587 TriU
4881 586 TriU
4940 585 TriU
4997 584 TriU
5051 583 TriU
5103 582 TriU
5154 581 TriU
5202 580 TriU
5248 580 TriU
5293 579 TriU
5336 579 TriU
5378 579 TriU
5419 578 TriU
5458 578 TriU
5496 578 TriU
5533 577 TriU
5569 577 TriU
5604 577 TriU
5639 577 TriU
5672 577 TriU
5704 577 TriU
5736 577 TriU
5766 577 TriU
5796 577 TriU
5826 576 TriU
5855 576 TriU
5883 576 TriU
5910 576 TriU
5937 576 TriU
5963 576 TriU
5989 576 TriU
6015 576 TriU
6039 576 TriU
6064 576 TriU
6088 576 TriU
6111 576 TriU
6134 576 TriU
6157 576 TriU
6179 576 TriU
6201 576 TriU
6222 576 TriU
6243 576 TriU
6264 576 TriU
6285 576 TriU
6305 576 TriU
6324 576 TriU
6344 576 TriU
6363 576 TriU
6382 576 TriU
6401 576 TriU
6419 576 TriU
6437 576 TriU
6455 576 TriU
6473 576 TriU
6490 576 TriU
6507 576 TriU
6524 576 TriU
6541 576 TriU
6557 576 TriU
6574 576 TriU
6590 576 TriU
6606 576 TriU
6621 576 TriU
6637 576 TriU
6652 576 TriU
6667 576 TriU
6682 576 TriU
6697 576 TriU
6712 576 TriU
6411 4310 TriU
% End plot #3
1.000 UL
LTb
990 4823 N
990 576 L
5885 0 V
0 4247 V
-5885 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
